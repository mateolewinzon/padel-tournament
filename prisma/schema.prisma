generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model jugador {
  dni                                 String   @id @db.VarChar(20)
  nombre                              String   @db.VarChar(50)
  apellido                            String   @db.VarChar(50)
  pareja_pareja_dni_jugador1Tojugador pareja[] @relation("pareja_dni_jugador1Tojugador")
  pareja_pareja_dni_jugador2Tojugador pareja[] @relation("pareja_dni_jugador2Tojugador")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model pareja {
  nombre_pareja                          String      @id @db.VarChar(50)
  dni_jugador1                           String      @db.VarChar(20)
  dni_jugador2                           String      @db.VarChar(20)
  jugador_pareja_dni_jugador1Tojugador   jugador     @relation("pareja_dni_jugador1Tojugador", fields: [dni_jugador1], references: [dni], onDelete: NoAction, onUpdate: NoAction)
  jugador_pareja_dni_jugador2Tojugador   jugador     @relation("pareja_dni_jugador2Tojugador", fields: [dni_jugador2], references: [dni], onDelete: NoAction, onUpdate: NoAction)
  partido_partido_nombre_pareja1Topareja partido[]   @relation("partido_nombre_pareja1Topareja")
  partido_partido_nombre_pareja2Topareja partido[]   @relation("partido_nombre_pareja2Topareja")
  resultado                              resultado[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model partido {
  id_partido                            Int        @id @default(autoincrement())
  nombre_pareja1                        String     @db.VarChar(50)
  nombre_pareja2                        String     @db.VarChar(50)
  estado                                String?    @default("programado") @db.VarChar(20)
  pareja_partido_nombre_pareja1Topareja pareja     @relation("partido_nombre_pareja1Topareja", fields: [nombre_pareja1], references: [nombre_pareja], onDelete: NoAction, onUpdate: NoAction)
  pareja_partido_nombre_pareja2Topareja pareja     @relation("partido_nombre_pareja2Topareja", fields: [nombre_pareja2], references: [nombre_pareja], onDelete: NoAction, onUpdate: NoAction)
  resultado                             resultado?
}

model resultado {
  id_resultado Int     @id @default(autoincrement())
  id_partido   Int     @unique
  set_pareja1  Int?
  set_pareja2  Int?
  ganador      String? @db.VarChar(50)
  pareja       pareja? @relation(fields: [ganador], references: [nombre_pareja], onDelete: NoAction, onUpdate: NoAction)
  partido      partido @relation(fields: [id_partido], references: [id_partido], onDelete: NoAction, onUpdate: NoAction)
}

model profiles {
  user_id   String   @unique
  name      String
  role      String   @default("user")
  created_at DateTime @default(now())
}