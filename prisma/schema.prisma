generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model jugador {
  id Int @id @default(autoincrement())
  documento                                 String   @db.VarChar(20)
  nombre                              String   @db.VarChar(50)
  apellido                            String   @db.VarChar(50)
  parejas1                              pareja[] @relation("jugador1")
  parejas2                              pareja[] @relation("jugador2")
}

model pareja {
  id Int @id @default(autoincrement())
  nombre_pareja                          String  @unique @db.VarChar(50)
  id_jugador1 Int
  id_jugador2 Int
  jugador1 jugador @relation("jugador1", fields: [id_jugador1], references: [id], onDelete: NoAction, onUpdate: NoAction)
  jugador2 jugador @relation("jugador2", fields: [id_jugador2], references: [id], onDelete: NoAction, onUpdate: NoAction)
  torneo_pareja                           torneo_pareja[]
}

model partido {
  id                            Int        @id @default(autoincrement())
  id_pareja1                    Int 
  id_pareja2                    Int
  pareja1 torneo_pareja @relation("pareja1", fields: [id_pareja1], references: [id], onDelete: NoAction, onUpdate: NoAction)
  pareja2 torneo_pareja @relation("pareja2", fields: [id_pareja2], references: [id], onDelete: NoAction, onUpdate: NoAction)
  estado                                String?    @default("programado") @db.VarChar(20)
  resultado                             resultado?
  id_torneo                             Int
  torneo                                torneo   @relation(fields: [id_torneo], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model resultado {
  id Int     @id @default(autoincrement())
  id_partido   Int     @unique
  set_pareja1  Int?
  set_pareja2  Int?
  ganador      Int?
  partido      partido @relation(fields: [id_partido], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

enum role {
  admin
  user
}

model profiles {
  user_id   String   @unique
  name      String
  role      role   @default(user)
  created_at DateTime @default(now())
}

model torneo_pareja {
  id Int @id @default(autoincrement())
  id_torneo Int
  id_pareja Int
  torneo torneo @relation(fields: [id_torneo], references: [id], onDelete: NoAction, onUpdate: NoAction)
  pareja pareja @relation(fields: [id_pareja], references: [id], onDelete: NoAction, onUpdate: NoAction)
  partidos_como_pareja1 partido[] @relation("pareja1")
  partidos_como_pareja2 partido[] @relation("pareja2")

  @@unique([id_torneo, id_pareja])
}

model torneo {
  id Int @id @default(autoincrement())
  nombre_torneo String @db.VarChar(50)
  lugar String @db.VarChar(50)
  foto_url String @db.VarChar(255)
  fecha DateTime
  parejas torneo_pareja[]
  partidos partido[]
}